services:
    auth-service:
      image: auth-service
      container_name: auth-service
      build:
        context: ./
        dockerfile: backend/authservice/Dockerfile
      ports:
        - "5000:5000"
      networks:
        - bridge-network-transcendence
      env_file:
        - secrets/backend/authservice/authservice-secrets.txt
      volumes:
        - auth-service-db-data:/app/backend/authservice/prisma
#      restart: always

    game-service:
      image: game-service
      container_name: game-service
      build:
        context: ./
        dockerfile: backend/game-service/Dockerfile
      ports:
        - "5001:5001"
      networks:
        - bridge-network-transcendence
      env_file:
        - secrets/backend/game-service/game-service-secrets.txt
      volumes:
        - game-service-db-date:/app/data
#      restart: always
    user-service:
      image: user-service
      container_name: user-service
      build:
        context: ./
        dockerfile: backend/userservice/Dockerfile
      ports:
        - "5002:5002"
      networks:
        - bridge-network-transcendence
      env_file:
        - secrets/backend/userservice/userservice-secrets.txt
      volumes:
        - user-service-db-date:/app/data
#      restart: always


volumes:
    auth-service-db-data:
    game-service-db-date:
    user-service-db-date:

networks:
  bridge-network-transcendence:
#    external: true
#    name: bridge-network-transcendence













# ---------------------------------user-service------------------------------------------
#  user-service:
#    build: backend/user-service
#    image: user-service
#    container_name: user-service
#    ports:
#      - "5000:5000"
#    networks:
#      - bridge-network-transcendence
#    volumes:
#      - user-service-date:/example/path
#    env_file:
#      - .env
#    depends_on:
#      - example
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost" ]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    restart: always

# --------------------------------auth-service---------------------------------------------
#  auth-service:
#    build: backend/auth-service
#    image: auth-service
#    container_name: auth-service
#    ports:
#      - "5000:5000"
#    networks:
#      - bridge-network-transcendence
#    volumes:
#      - auth-service-data:/example/path
#    env_file:
#      - .env
#    depends_on:
#      - example
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost" ]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    restart: always

# -------------------------------------reverse-proxy-service---------------------------------------------------------

#  reverse-proxy-service:
#    build: reverse-proxy/
#    image: reverse-proxy-service
#    container_name: reverse-proxy-service
#    ports:
#      - "5000:5000"
#    networks:
#      - bridge-network-transcendence
#    volumes:
#      - reverse-proxy-service-data:/example/path
#    env_file:
#      - .env
#    depends_on:
#      - example
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost" ]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    restart: always


# ---------------------------------------frontend-service--------------------------------------------------

#  frontend-service:
#    build: frontend
#    image: frontend-service
#    container_name: frontend-service
#    ports:
#      - "80:80"
#    networks:
#      - bridge-network-transcendence
#    volumes:
#      - frontend-service-data:/example/path
#    env_file:
#      - .env
#    depends_on:
#      - example
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost" ]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    restart: always


#volumes:
#  game-service-date:
#  frontend-service-data:
#  reverse-proxy-service-data:
#  auth-service-data:
#  user-service-date:


#networks:
#  bridge-network-transcendence:
#    external: true
#    name: bridge-network-transcendence

